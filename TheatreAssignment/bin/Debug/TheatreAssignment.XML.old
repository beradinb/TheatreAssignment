<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TheatreAssignment</name>
    </assembly>
    <members>
        <member name="T:TheatreAssignment.ITheatre">
            <summary>
            Theatre Interface
            </summary>
        </member>
        <member name="P:TheatreAssignment.ITheatre.dictionary">
            <summary>
            Dictionary which contains the performance key and a seat class array
            </summary>
        </member>
        <member name="M:TheatreAssignment.ITheatre.reserveSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Reserving a seat
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
        </member>
        <member name="M:TheatreAssignment.ITheatre.buySeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Buying a seat
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.ITheatre.returnSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returning a seat previously bought by a customer
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
        </member>
        <member name="M:TheatreAssignment.ITheatre.cancelReservations(System.Int32)">
            <summary>
            Theatre can cancel reservations
            </summary>
            <param name="performanceId"></param>
        </member>
        <member name="M:TheatreAssignment.ITheatre.checkAvailability(System.Int32)">
            <summary>
            Check availability of a performance
            </summary>
            <param name="performance"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.ITheatre.checkCustomer(System.Int32,System.Int32)">
            <summary>
            Check which customer has booked a seat for a performance by returning customer id from the seat
            </summary>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.ITheatre.printSeatingPlan(System.Int32)">
            <summary>
            Printing seat plan of a performance
            </summary>
            <param name="performanceId"></param>
        </member>
        <member name="T:TheatreAssignment.TheatreContract">
            <summary>
            Abstract class for the Theatre which contains the code contracts
            </summary>
        </member>
        <member name="P:TheatreAssignment.TheatreContract.dictionary">
            <summary>
            Dictionary which contains the performance key and a seat class array
            </summary>
        </member>
        <member name="M:TheatreAssignment.TheatreContract.buySeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Buy Seats function which contains the contracts
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.TheatreContract.cancelReservations(System.Int32)">
            <summary>
            Cancel Reservation function which contains the contracts
            </summary>
            <param name="performanceId"></param>
        </member>
        <member name="M:TheatreAssignment.TheatreContract.checkAvailability(System.Int32)">
            <summary>
            Chech availability function with contracts
            </summary>
            <param name="performanceId"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.TheatreContract.checkCustomer(System.Int32,System.Int32)">
            <summary>
            Check customer function with contracts
            </summary>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.TheatreContract.printSeatingPlan(System.Int32)">
            <summary>
            Print seating plan per performance function with contracts
            </summary>
            <param name="performanceId"></param>
        </member>
        <member name="M:TheatreAssignment.TheatreContract.reserveSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Reserve seat function with contracts
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
        </member>
        <member name="M:TheatreAssignment.TheatreContract.returnSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Return seat function with contracts
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
        </member>
        <member name="T:TheatreAssignment.SeatState">
            <summary>
            States for each seat
            </summary>
        </member>
        <member name="F:TheatreAssignment.SeatState.Available">
            <summary>
            Available state, seat can be booked.
            </summary>
        </member>
        <member name="F:TheatreAssignment.SeatState.Sold">
            <summary>
            Sold State, customer has bought this seat.
            </summary>
        </member>
        <member name="F:TheatreAssignment.SeatState.Reserved">
            <summary>
            Reserrved state, only customer who reserved this seat can buy it
            </summary>
        </member>
        <member name="F:TheatreAssignment.SeatState.NotInUse">
            <summary>
            Not in use state, can not be reserved or bought.
            </summary>
        </member>
        <member name="T:TheatreAssignment.CSeat">
            <summary>
            Seat Class
            </summary>
        </member>
        <member name="P:TheatreAssignment.CSeat.customerId">
            <summary>
            Holds the customer ID so that the threatre know which seat was booked by which customer
            </summary>
        </member>
        <member name="P:TheatreAssignment.CSeat.sState">
            <summary>
            Holds the state of each seat
            </summary>
        </member>
        <member name="M:TheatreAssignment.CSeat.#ctor">
            <summary>
            Seat Constructor
            </summary>
        </member>
        <member name="T:TheatreAssignment.Theatre">
            <summary>
            Theatre Class, contains all the performances and functions to be carried out on a performance
            </summary>
        </member>
        <member name="M:TheatreAssignment.Theatre.ObjectInvariant">
            <summary>
            Invarients for max seats
            </summary>
        </member>
        <member name="M:TheatreAssignment.Theatre.#ctor(System.Int32)">
            <summary>
            Theatre constructer which takes the number of performances
            </summary>
            <param name="performances"></param>
        </member>
        <member name="M:TheatreAssignment.Theatre.printSeatingPlan(System.Int32)">
            <summary>
            Displays the seating plan of a performance using the
            the performance ID
            </summary>
            <param name="performanceId"></param>
        </member>
        <member name="M:TheatreAssignment.Theatre.buySeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Buying a seat for a performance by chosing a seat number and passing customerID and performanceID
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.Theatre.cancelReservations(System.Int32)">
            <summary>
            Cancelling all reservations for a performance
            </summary>
            <param name="performanceId"></param>
        </member>
        <member name="M:TheatreAssignment.Theatre.checkAvailability(System.Int32)">
            <summary>
            Checking the seat availability of a performance
            </summary>
            <param name="performanceId"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.Theatre.checkCustomer(System.Int32,System.Int32)">
            <summary>
            Checking which which customer has booked a specific seat in a specific performance
            by returning customerID
            </summary>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
            <returns></returns>
        </member>
        <member name="M:TheatreAssignment.Theatre.reserveSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Reserving a seat for a performance by chosing a seat number and passing customerID and performanceID 
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
        </member>
        <member name="M:TheatreAssignment.Theatre.returnSeat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows customer to return seat they have previously reserved
            </summary>
            <param name="customerId"></param>
            <param name="performanceId"></param>
            <param name="seatNum"></param>
        </member>
    </members>
</doc>
